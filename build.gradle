plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-fabric-${project.minecraft_version}"
group = project.maven_group

repositories{
    maven {
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        url = 'https://storage.googleapis.com/devan-maven/'
    }
    maven {
        url = "https://maven.terraformersmc.com/releases"
    }
    maven { url "https://maven.shedaniel.me/" }
    mavenCentral()

}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:4.0.1"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:4.0.1"

    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:4.0.1"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:4.0.1"

    modImplementation "io.github.cottonmc:LibGui:5.3.1+1.18"
    include "io.github.cottonmc:LibGui:5.3.1+1.18"

    modImplementation group: 'net.devtech', name: 'arrp', version: '0.5.5'
    include group: 'net.devtech', name: 'arrp', version: '0.5.5'

    modApi("me.shedaniel.cloth:cloth-config-fabric:6.2.57"){
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation "com.terraformersmc:modmenu:3.1.0"
}

loom {
    accessWidenerPath = file("src/main/resources/fedora.accesswidener")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}